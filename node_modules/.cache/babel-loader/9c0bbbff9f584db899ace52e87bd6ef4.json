{"ast":null,"code":"import _classCallCheck from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{IonContent,IonHeader,IonItem,IonLabel,IonList,IonPage,IonTitle,IonToolbar,IonSelect,IonSelectOption,IonGrid,IonRow,IonCol}from'@ionic/react';import{useIndexedDB}from'react-indexed-db';/**\n * Klasse oder Komponente die alle bisher hinzugefügten Monate in einer Auswahl auflistet \n * und nach Auswahl eines Monats dessen kompletten Eingaben aufzeigt\n */var MonthReview=/*#__PURE__*/function(_React$Component){_inherits(MonthReview,_React$Component);function MonthReview(){var _getPrototypeOf2;var _this;_classCallCheck(this,MonthReview);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MonthReview)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={inputs:[],reviewedMonth:\"\",monthlist:[],endBudget:0};_this.getMonthReview=function(event){_this.setState({reviewedMonth:event.detail.value});_this.getMonthInputs();_this.getMonthValues();};_this.getMonthInputs=function(){var _useIndexedDB=useIndexedDB('inputs'),getAll=_useIndexedDB.getAll;getAll().then(function(inputs){_this.setState({inputs:inputs});_this.state.inputs.map(function(index){if(index.month===_this.state.reviewedMonth.substr(0,7)){_this.setState({endBudget:index.actualbudget});}});});};_this.getMonthValues=function(){var _useIndexedDB2=useIndexedDB('monthlist'),getAll=_useIndexedDB2.getAll;getAll().then(function(monthlist){_this.setState({monthlist:monthlist});});};return _this;}_createClass(MonthReview,[{key:\"render\",/**\n   * Methode rendert die Seite Month Review. \n   * Nachdem ein Monat über das Select Tag ausgewählt wurde, \n   * wird eine Liste mit allen Inputs des ausgewählten Monats gerendert.\n   * Ebenfalls wird das Startbudget und das am Ende übrig gebliebene Endbudget angezeigt.\n   */value:function render(){var _this2=this;return React.createElement(IonPage,null,React.createElement(IonHeader,null,React.createElement(IonToolbar,null,React.createElement(IonTitle,null,\"Month List\"))),React.createElement(IonContent,null,React.createElement(IonList,null,React.createElement(IonItem,null,React.createElement(IonLabel,null),React.createElement(IonSelect,{slot:\"start\",multiple:false,placeholder:\"Select Month\",onIonChange:this.getMonthReview},this.props.monthObj.map(function(index){return React.createElement(IonSelectOption,{key:index.month},index.month,\" \");}))),React.createElement(IonList,null,this.state.monthlist.map(function(monthValues){if(monthValues.month===_this2.state.reviewedMonth.substr(0,7)){return React.createElement(IonItem,{key:monthValues.id},React.createElement(IonLabel,null,\"Startbudget: \",monthValues.startbudget),React.createElement(IonLabel,null,\"Endbudget: \",_this2.state.endBudget));}})),React.createElement(IonList,null,this.state.inputs.map(function(index){if(index.month===_this2.state.reviewedMonth.substr(0,7)){var out=\"\";if(index.ausgabe){out=\"+ \";}else{out=\"- \";}return React.createElement(IonItem,{key:index.inputs_id},React.createElement(IonGrid,null,React.createElement(IonRow,null,React.createElement(IonCol,null,index.datum.substr(0,10)),React.createElement(IonCol,null,index.titel),React.createElement(IonCol,null,out,index.betrag,\"\\u20AC\"))));}})))));}}]);return MonthReview;}(React.Component);export default MonthReview;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/MonthReview.tsx"],"names":["React","IonContent","IonHeader","IonItem","IonLabel","IonList","IonPage","IonTitle","IonToolbar","IonSelect","IonSelectOption","IonGrid","IonRow","IonCol","useIndexedDB","MonthReview","state","inputs","reviewedMonth","monthlist","endBudget","getMonthReview","event","setState","detail","value","getMonthInputs","getMonthValues","getAll","then","map","index","month","substr","actualbudget","props","monthObj","monthValues","id","startbudget","out","ausgabe","inputs_id","datum","titel","betrag","Component"],"mappings":"i6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,SAArB,CAAgCC,OAAhC,CAAyCC,QAAzC,CAAmDC,OAAnD,CAA4DC,OAA5D,CAAqEC,QAArE,CAA+EC,UAA/E,CAA2FC,SAA3F,CAAsGC,eAAtG,CAAuHC,OAAvH,CAAgIC,MAAhI,CAAwIC,MAAxI,KAAsJ,cAAtJ,CAGA,OAASC,YAAT,KAA6B,kBAA7B,CAkBA;;;MAIMC,CAAAA,W,+ZACJC,K,CAAgB,CACdC,MAAM,CAAE,EADM,CAEdC,aAAa,CAAE,EAFD,CAGdC,SAAS,CAAE,EAHG,CAIdC,SAAS,CAAE,CAJG,C,OAWTC,c,CAAiB,SAACC,KAAD,CAAgD,CACtE,MAAKC,QAAL,CAAc,CACZL,aAAa,CAAEI,KAAK,CAACE,MAAN,CAAaC,KADhB,CAAd,EAGA,MAAKC,cAAL,GACA,MAAKC,cAAL,GAED,C,OAMMD,c,CAAiB,UAAM,mBACTZ,YAAY,CAAC,QAAD,CADH,CACpBc,MADoB,eACpBA,MADoB,CAG5BA,MAAM,GAAGC,IAAT,CAAc,SAACZ,MAAD,CAAY,CAExB,MAAKM,QAAL,CAAc,CACZN,MAAM,CAAEA,MADI,CAAd,EAIA,MAAKD,KAAL,CAAWC,MAAX,CAAkBa,GAAlB,CAAsB,SAACC,KAAD,CAAgB,CAEpC,GAAIA,KAAK,CAACC,KAAN,GAAgB,MAAKhB,KAAL,CAAWE,aAAX,CAAyBe,MAAzB,CAAgC,CAAhC,CAAkC,CAAlC,CAApB,CAA0D,CAExD,MAAKV,QAAL,CAAc,CACZH,SAAS,CAAEW,KAAK,CAACG,YADL,CAAd,EAGD,CACF,CARD,EASD,CAfD,EAgBD,C,OAMMP,c,CAAiB,UAAM,oBACTb,YAAY,CAAC,WAAD,CADH,CACpBc,MADoB,gBACpBA,MADoB,CAG5BA,MAAM,GAAGC,IAAT,CAAc,SAACV,SAAD,CAAe,CAE3B,MAAKI,QAAL,CAAc,CACZJ,SAAS,CAAEA,SADC,CAAd,EAGD,CALD,EAMD,C,uDAGD;;;;;4BAMgB,iBAEd,MACE,qBAAC,OAAD,MACE,oBAAC,SAAD,MACE,oBAAC,UAAD,MACE,oBAAC,QAAD,mBADF,CADF,CADF,CAME,oBAAC,UAAD,MACE,oBAAC,OAAD,MACE,oBAAC,OAAD,MACE,oBAAC,QAAD,MADF,CAIE,oBAAC,SAAD,EAAW,IAAI,CAAC,OAAhB,CAAwB,QAAQ,CAAE,KAAlC,CAAyC,WAAW,CAAC,cAArD,CAAoE,WAAW,CAAE,KAAKE,cAAtF,EAEI,KAAKc,KAAL,CAAWC,QAAX,CAAoBN,GAApB,CAAwB,SAACC,KAAD,CAAgB,CACtC,MACE,qBAAC,eAAD,EAAiB,GAAG,CAAEA,KAAK,CAACC,KAA5B,EAAoCD,KAAK,CAACC,KAA1C,KADF,CAID,CALD,CAFJ,CAJF,CADF,CAkBM,oBAAC,OAAD,MAEA,KAAKhB,KAAL,CAAWG,SAAX,CAAqBW,GAArB,CAAyB,SAACO,WAAD,CAAoB,CACzC,GAAGA,WAAW,CAACL,KAAZ,GAAsB,MAAI,CAAChB,KAAL,CAAWE,aAAX,CAAyBe,MAAzB,CAAgC,CAAhC,CAAkC,CAAlC,CAAzB,CAA8D,CAC5D,MACE,qBAAC,OAAD,EAAS,GAAG,CAAEI,WAAW,CAACC,EAA1B,EACA,oBAAC,QAAD,sBACgBD,WAAW,CAACE,WAD5B,CADA,CAIA,oBAAC,QAAD,oBACY,MAAI,CAACvB,KAAL,CAAWI,SADvB,CAJA,CADF,CAYD,CACJ,CAfD,CAFA,CAlBN,CAwCE,oBAAC,OAAD,MAGI,KAAKJ,KAAL,CAAWC,MAAX,CAAkBa,GAAlB,CAAsB,SAACC,KAAD,CAAgB,CAEpC,GAAIA,KAAK,CAACC,KAAN,GAAgB,MAAI,CAAChB,KAAL,CAAWE,aAAX,CAAyBe,MAAzB,CAAgC,CAAhC,CAAkC,CAAlC,CAApB,CAA0D,CAExD,GAAIO,CAAAA,GAAG,CAAG,EAAV,CACA,GAAIT,KAAK,CAACU,OAAV,CAAmB,CACjBD,GAAG,CAAG,IAAN,CACD,CAFD,IAGK,CACHA,GAAG,CAAG,IAAN,CAED,CAED,MACE,qBAAC,OAAD,EAAS,GAAG,CAAET,KAAK,CAACW,SAApB,EACE,oBAAC,OAAD,MACE,oBAAC,MAAD,MACE,oBAAC,MAAD,MAASX,KAAK,CAACY,KAAN,CAAYV,MAAZ,CAAmB,CAAnB,CAAsB,EAAtB,CAAT,CADF,CAEE,oBAAC,MAAD,MAASF,KAAK,CAACa,KAAf,CAFF,CAGE,oBAAC,MAAD,MACGJ,GADH,CAEGT,KAAK,CAACc,MAFT,UAHF,CADF,CADF,CADF,CAcD,CACF,CA5BD,CAHJ,CAxCF,CADF,CANF,CADF,CAuFD,C,yBA7JuB7C,KAAK,CAAC8C,S,EAgKhC,cAAe/B,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { IonContent, IonHeader, IonItem, IonLabel, IonList, IonPage, IonTitle, IonToolbar, IonSelect, IonSelectOption, IonGrid, IonRow, IonCol } from '@ionic/react';\n\nimport { InputChangeEventDetail } from '@ionic/core';\nimport { useIndexedDB } from 'react-indexed-db';\n\n\n\n\n\ninterface IState {\n  reviewedMonth: string;\n  inputs: object[];\n  monthlist: object[];\n  endBudget: number;\n}\n\ninterface IProps {\n  monthObj: object[];\n}\n\n\n/**\n * Klasse oder Komponente die alle bisher hinzugefügten Monate in einer Auswahl auflistet \n * und nach Auswahl eines Monats dessen kompletten Eingaben aufzeigt\n */\nclass MonthReview extends React.Component<IProps, IState> {\n  state: IState = {\n    inputs: [],\n    reviewedMonth: \"\",\n    monthlist: [],\n    endBudget: 0\n  }\n\n  /**\n   * Methode um ausgewählten Monat der Monatsauswahl zu speichern und\n   * Aufruf der Methodem getMonthInputs und getMonthValues\n   */\n  public getMonthReview = (event: CustomEvent<InputChangeEventDetail>) => {\n    this.setState({\n      reviewedMonth: event.detail.value!,\n    })\n    this.getMonthInputs();\n    this.getMonthValues();\n   \n  }\n\n  /**\n   * Methode um alle Inputs der Indexed DB abzurufen und in State inputs zu speichern.\n   * Auch wird hier der Endbetrag des ausgewählten Monats gesetzt \n   */\n  public getMonthInputs = () => {\n    const { getAll } = useIndexedDB('inputs');\n\n    getAll().then((inputs) => {\n\n      this.setState({\n        inputs: inputs\n      })\n      \n      this.state.inputs.map((index: any) => {\n  \n        if (index.month === this.state.reviewedMonth.substr(0,7)) {\n            \n          this.setState({\n            endBudget: index.actualbudget\n          })  \n        }\n      })\n    })   \n  }\n\n  /**\n   * Methode um alle in der Indexed DB gespeicherten Werte des ObjectStores \"monthlist\" abzurufen \n   * und im State \"monthlist\" zu speichern\n   */\n  public getMonthValues = () => {\n    const { getAll } = useIndexedDB('monthlist');\n\n    getAll().then((monthlist) => {\n\n      this.setState({\n        monthlist: monthlist\n      })      \n    }) \n  }\n\n\n  /**\n   * Methode rendert die Seite Month Review. \n   * Nachdem ein Monat über das Select Tag ausgewählt wurde, \n   * wird eine Liste mit allen Inputs des ausgewählten Monats gerendert.\n   * Ebenfalls wird das Startbudget und das am Ende übrig gebliebene Endbudget angezeigt.\n   */\n  public render() {\n    \n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Month List</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonList>\n            <IonItem >\n              <IonLabel>\n\n              </IonLabel>\n              <IonSelect slot=\"start\" multiple={false} placeholder=\"Select Month\" onIonChange={this.getMonthReview}>\n                {\n                  this.props.monthObj.map((index: any) => {\n                    return (\n                      <IonSelectOption key={index.month}>{index.month} </IonSelectOption>\n                    )\n\n                  })\n                }\n\n              </IonSelect>\n            </IonItem>\n\n                <IonList>\n                {\n                this.state.monthlist.map((monthValues: any)=>{\n                    if(monthValues.month === this.state.reviewedMonth.substr(0,7)){\n                      return(\n                        <IonItem key={monthValues.id}>\n                        <IonLabel>\n                          Startbudget: {monthValues.startbudget}\n                        </IonLabel>\n                        <IonLabel>\n                        Endbudget: {this.state.endBudget}\n                        </IonLabel>  \n                        </IonItem>\n\n                        \n                      )\n                    }\n                }) } \n\n                </IonList>\n            \n\n            <IonList>\n             \n                {\n                this.state.inputs.map((index: any) => {\n\n                  if (index.month === this.state.reviewedMonth.substr(0,7)) {\n                      \n                    let out = \"\";\n                    if (index.ausgabe) {\n                      out = \"+ \"\n                    }\n                    else {\n                      out = \"- \"\n\n                    }\n                    \n                    return (\n                      <IonItem key={index.inputs_id}>\n                        <IonGrid>\n                          <IonRow >\n                            <IonCol>{index.datum.substr(0, 10)}</IonCol>\n                            <IonCol>{index.titel}</IonCol>\n                            <IonCol>\n                              {out}\n                              {index.betrag}€</IonCol>\n\n                          </IonRow>\n                        </IonGrid>\n                      </IonItem>\n                    )\n                  }\n                })\n              }\n            </IonList>\n            \n          </IonList>\n        </IonContent>\n      </IonPage>\n    );\n  }\n\n}\nexport default MonthReview;"]},"metadata":{},"sourceType":"module"}