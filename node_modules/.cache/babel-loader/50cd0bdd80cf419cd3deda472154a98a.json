{"ast":null,"code":"import _objectDestructuringEmpty from \"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar _jsxFileName = \"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/ActualMonth.tsx\";\nimport React from 'react';\nimport { IonContent, IonHeader, IonItem, IonLabel, IonList, IonPage, IonTitle, IonToolbar, IonRow, IonCol, IonGrid, IonIcon, IonButton } from '@ionic/react';\nimport { useIndexedDB } from 'react-indexed-db';\nimport { trash } from 'ionicons/icons';\n\n/**\n * Klasse oder Komponente die den Aktuellen Monat mit allen zugehörigen Inputs anzeigt\n */\nclass ActualMonth extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      inputs: []\n    };\n\n    this.getInputsByIndex = () => {\n      const _useIndexedDB = useIndexedDB('inputs'),\n            getAll = _useIndexedDB.getAll;\n\n      getAll().then(inputs => {\n        this.setState({\n          inputs: inputs\n        });\n      });\n    };\n\n    this.deleteInput = id => {\n      const _ref;\n\n      _objectDestructuringEmpty(_ref);\n    };\n  }\n\n  /**\n   * Diese Methode rendert die Seite Actual Month. \n   * Hier wird der aktuelle Monat mit dem aktuellen Budget angezeigt. \n   * Mit Hilfe einer Map Funktion werden alle Inputs, die dem aktuellen Monat zugehören, aufgelistet. \n   * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen.\n   */\n  render() {\n    this.getInputsByIndex();\n    return React.createElement(IonPage, {\n      onLoad: () => {\n        this.props.getActualMonth();\n        this.props.getActualBudget();\n        this.forceUpdate();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Actual Month\"))), React.createElement(IonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Actual Month: \", this.props.month.substr(0, 7))), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Actual Budget: \", this.props.budget)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(IonList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(IonGrid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(IonRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Date\"), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Title\"), React.createElement(IonCol, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Value\"), React.createElement(IonCol, {\n      size: \"2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))),\n    /**\n     * Methode um alle Inputs aufzulisten die dem Aktuellen Monat zugehören.\n     * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen\n     */\n    this.state.inputs.map(index => {\n      if (index.month === this.props.month.substr(0, 7)) {\n        let out = \"\";\n\n        if (index.ausgabe) {\n          out = \"+ \";\n        } else {\n          out = \"- \";\n        }\n\n        return React.createElement(IonItem, {\n          key: index.inputs_id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(IonGrid, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(IonRow, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(IonCol, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, index.datum.substr(0, 10)), React.createElement(IonCol, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, index.titel), React.createElement(IonCol, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, out, index.betrag, \"\\u20AC\"), React.createElement(IonCol, {\n          size: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(IonButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, React.createElement(IonIcon, {\n          icon: trash,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }))))));\n      }\n    })))));\n  }\n\n}\n\nexport default ActualMonth;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/ActualMonth.tsx"],"names":["React","IonContent","IonHeader","IonItem","IonLabel","IonList","IonPage","IonTitle","IonToolbar","IonRow","IonCol","IonGrid","IonIcon","IonButton","useIndexedDB","trash","ActualMonth","Component","state","inputs","getInputsByIndex","getAll","then","setState","deleteInput","id","render","props","getActualMonth","getActualBudget","forceUpdate","month","substr","budget","map","index","out","ausgabe","inputs_id","datum","titel","betrag"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IonContent, IonHeader, IonItem, IonLabel, IonList, IonPage, IonTitle, IonToolbar, IonRow, IonCol, IonGrid, IonIcon, IonButton} from '@ionic/react';\n\n\nimport {useIndexedDB} from 'react-indexed-db';\nimport { trash } from 'ionicons/icons';\n\n\n\n  \n\n\n  interface IState {\n    inputs: object[];\n  }\n  \n  interface IProps {\n  month: string;\n  budget: number;\n  getActualBudget: ()=> void; \n  getActualMonth: ()=> void; \n  }\n\n\n  /**\n   * Klasse oder Komponente die den Aktuellen Monat mit allen zugehörigen Inputs anzeigt\n   */\nclass ActualMonth extends React.Component<IProps, IState> {\n  state: IState ={\n    inputs: []\n  }\n \n\n  /**\n   * Methode um alle Inputs aus der Indexed DB abzurufen\n   */\n  public getInputsByIndex= ()=> {\n      const {getAll} = useIndexedDB('inputs');\n\n      getAll().then((inputs) =>{\n  \n        this.setState({\n         inputs: inputs\n       })\n      })\n  } \n \n  public deleteInput = (id: number)=>{\n      const {}\n  }\n\n  /**\n   * Diese Methode rendert die Seite Actual Month. \n   * Hier wird der aktuelle Monat mit dem aktuellen Budget angezeigt. \n   * Mit Hilfe einer Map Funktion werden alle Inputs, die dem aktuellen Monat zugehören, aufgelistet. \n   * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen.\n   */ \n  public render(){\n \n    this.getInputsByIndex();\n   \n  return (\n    <IonPage onLoad={()=>{this.props.getActualMonth() ;this.props.getActualBudget();this.forceUpdate();}}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Actual Month</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItem >\n            \n\n            <IonLabel>\n      Actual Month: {this.props.month.substr(0,7)}\n      </IonLabel>\n      </IonItem>\n     \n      <IonItem>\n\n      <IonLabel>\n      Actual Budget: {this.props.budget}\n      </IonLabel>\n          </IonItem>\n\n          <br></br>\n          <IonList>\n            <IonItem>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>\n                    Date\n                  </IonCol>\n                  <IonCol>\n                    Title\n                  </IonCol>\n                  <IonCol>\n                    Value\n                  </IonCol>\n                  <IonCol size=\"2\">\n                    \n                  </IonCol>\n                </IonRow>\n              </IonGrid>\n              </IonItem>\n            {\n              /**\n               * Methode um alle Inputs aufzulisten die dem Aktuellen Monat zugehören.\n               * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen\n               */\n            this.state.inputs.map((index: any)=>{\n              \n              if(index.month===this.props.month.substr(0,7)){\n                \n              let out = \"\";\n                if (index.ausgabe){\n                  out= \"+ \"\n                  }\n                  else{\n                    out= \"- \"\n                    \n                  }\n\n              return (\n                <IonItem key={index.inputs_id}>\n                  <IonGrid>\n                <IonRow >\n                <IonCol>{index.datum.substr(0,10)}</IonCol>\n            <IonCol>{index.titel}</IonCol> \n              <IonCol>\n               {out}\n                {index.betrag}€</IonCol>\n              <IonCol size=\"2\"><IonButton ><IonIcon icon={trash}></IonIcon></IonButton></IonCol>\n            </IonRow>\n            </IonGrid>\n            </IonItem>\n              )}\n            })\n          }\n          </IonList>\n         \n        </IonList>\n      \n  \n      </IonContent>\n    </IonPage>\n  );\n}\n\n}\nexport default ActualMonth;"]},"metadata":{},"sourceType":"module"}