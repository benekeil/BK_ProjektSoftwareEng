{"ast":null,"code":"import _classCallCheck from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{Redirect,Route}from'react-router-dom';import{IonApp,IonIcon,IonLabel,IonRouterOutlet,IonTabBar,IonTabButton,IonTabs}from'@ionic/react';import{IonReactRouter}from'@ionic/react-router';import{addCircleOutline,calendar,addCircle}from'ionicons/icons';import NewMonth from'./pages/NewMonth';import MonthReview from'./pages/MonthReview';import NewInput from'./pages/NewInput';import ActualMonth from'./pages/ActualMonth';import Start from'./pages/Start';import StartError from'./errors/starterror';/* Core CSS required for Ionic components to work properly */import'@ionic/react/css/core.css';/* Basic CSS for apps built with Ionic */import'@ionic/react/css/normalize.css';import'@ionic/react/css/structure.css';import'@ionic/react/css/typography.css';/* Optional CSS utils that can be commented out */import'@ionic/react/css/padding.css';import'@ionic/react/css/float-elements.css';import'@ionic/react/css/text-alignment.css';import'@ionic/react/css/text-transformation.css';import'@ionic/react/css/flex-utils.css';import'@ionic/react/css/display.css';/* Theme variables */import'./theme/variables.css';import{DBConfig}from'./db/DBConfig';import{initDB,useIndexedDB}from'react-indexed-db';initDB(DBConfig);/**\n * \n * Documentation Projekt Softwareengineering\n * Es wurde ein Ausgabenrechner implementiert, \n * der eine Übersicht über das aktuelle Budget und alle Ausgaben/Einnahmen eines Monats gibt\n * @author: Benedikt Keil\n * @version: V2.1\n * \n */var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);function App(){var _getPrototypeOf2;var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(App)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={actualBudget:0,startbudget:0,month:\"test\",monthObj:[{\"month\":\"Test\",\"startbudget\":0}],monthlistDB:[],allMonthObj:[{\"month\":\"no Month\",\"startbudget\":0,\"id\":1}],actualMonthObj:{month:\"no Month\",startbudget:0,actualbudget:0,id:0},inputs:[],monthID:1,firstLoad:true,normalMode:false,starterror:false};_this.getMonth=function(event){var month=event.detail.value;var monthsubstr=month.substr(0,7);_this.setState({month:monthsubstr});console.log(_this.state.month);_this.verifiyMonth();};_this.getStartbudget=function(event){_this.setState({startbudget:parseInt(event.detail.value)});console.log(_this.state.startbudget);};_this.pushMonthObj=function(){_this.state.monthObj.push({\"month\":_this.state.month,\"startbudget\":_this.state.startbudget});_this.forceUpdate();var _useIndexedDB=useIndexedDB('monthlist'),add=_useIndexedDB.add,getAll=_useIndexedDB.getAll;add({month:_this.state.month,startbudget:_this.state.startbudget,actualbudget:_this.state.startbudget});getAll().then(function(monthlistDB){_this.setState({monthlistDB:monthlistDB});});_this.getActualMonth();};_this.getMonthObj=function(){var _useIndexedDB2=useIndexedDB('monthlist'),getAll=_useIndexedDB2.getAll;getAll().then(function(monthlistDB){_this.setState({monthlistDB:monthlistDB});});};_this.firstLoadApp=function(){var _useIndexedDB3=useIndexedDB('monthlist'),getAll=_useIndexedDB3.getAll;getAll().then(function(month){if(month.length===0){_this.setState({firstLoad:true});}else{_this.setState({firstLoad:false,normalMode:true});_this.getActualMonth();}});console.log(_this.state.month+_this.state.startbudget);};_this.startRechner=function(){var _useIndexedDB4=useIndexedDB('monthlist'),add=_useIndexedDB4.add,getAll=_useIndexedDB4.getAll;if(_this.state.month!==\"test\"&&_this.state.startbudget!==0){add({month:_this.state.month,startbudget:_this.state.startbudget,actualbudget:_this.state.startbudget});getAll().then(function(month){if(month.length===0){add({month:_this.state.month,startbudget:_this.state.startbudget,actualbudget:_this.state.startbudget});}getAll().then(function(month){_this.setState({allMonthObj:month,firstLoad:false,normalMode:true});_this.getActualMonth();});});}else{_this.setState({starterror:true});}};_this.getActualMonth=function(){var _useIndexedDB5=useIndexedDB('monthlist'),getAll=_useIndexedDB5.getAll,getByID=_useIndexedDB5.getByID;getAll().then(function(month){_this.setState({allMonthObj:month});}).then(function(){getByID(Math.max.apply(Math,_this.state.allMonthObj.map(function(o){_this.setState({monthID:o.id});return o.id;}))).then(function(actualMonth){console.log(actualMonth);_this.setState({actualMonthObj:actualMonth});_this.setState({month:_this.state.actualMonthObj.month,startbudget:_this.state.actualMonthObj.startbudget,actualBudget:_this.state.actualMonthObj.actualbudget});_this.forceUpdate();console.log(_this.state.actualBudget);_this.getActualBudget();});});};_this.getActualBudget=function(){var _useIndexedDB6=useIndexedDB('inputs'),getAll=_useIndexedDB6.getAll,update=_useIndexedDB6.update;getAll().then(function(inputs){_this.setState({inputs:inputs});}).then(function(){if(_this.state.inputs.length!==0){_this.state.inputs.map(function(index){if(index.month===_this.state.month&&index.added===true){var actualBudget=index.actualbudget;_this.setState({actualBudget:actualBudget});}if(index.month===_this.state.month&&index.added===false){var _actualBudget=index.actualbudget;_this.setState({actualBudget:_actualBudget});if(index.ausgabe){_actualBudget+=index.betrag;_this.setState({actualBudget:_actualBudget});update({inputs_id:index.inputs_id,betrag:index.betrag,ausgabe:index.ausgabe,titel:index.titel,datum:index.datum,month:index.month,added:true,actualbudget:_actualBudget});}else{_actualBudget-=index.betrag;_this.setState({actualBudget:_actualBudget});update({inputs_id:index.inputs_id,betrag:index.betrag,ausgabe:index.ausgabe,titel:index.titel,datum:index.datum,month:index.month,added:true,actualbudget:_actualBudget});}}return{};});}});};_this.verifiyMonth=function(){var _useIndexedDB7=useIndexedDB('monthlist'),getAll=_useIndexedDB7.getAll;getAll().then(function(month){month.map(function(index){console.log(\"Test Month Verify: \"+_this.state.month);if(index.month===_this.state.month){_this.setState({starterror:true,month:\"test\",normalMode:false});console.log(_this.state.starterror);}});});};return _this;}_createClass(App,[{key:\"render\",/**\n   * Diese Methode rendert die TabBar die immer am unteren Bildschirmende gezeigt wird. \n   * Außerdem wird ein Router erstellt der die Navigation zwischen den einzelnen Seiten bereit stellt.\n   * Hier werden auch die Methoden der App Klasse an die anderen Komponenten übergeben, \n   * die dann in den einzelne Komponenten als Props zur Verfügung stehen.\n   */value:function render(){var _this2=this;return React.createElement(IonApp,{onLoad:function onLoad(){_this2.firstLoadApp();_this2.getMonthObj();}},this.state.firstLoad&&React.createElement(Start,{startRechner:this.startRechner,getMonth:this.getMonth,getStartbudget:this.getStartbudget,month:this.state.month,startbudget:this.state.startbudget}),this.state.starterror&&React.createElement(StartError,null),React.createElement(IonReactRouter,null,this.state.normalMode&&React.createElement(IonTabs,null,React.createElement(IonRouterOutlet,null,React.createElement(Route,{path:\"/newMonth\"},React.createElement(NewMonth,{getMonth:this.getMonth,getStartbudget:this.getStartbudget,pushMonthObj:this.pushMonthObj,month:this.state.month,startbudget:this.state.startbudget})),React.createElement(Route,{path:\"/monthReview\",component:MonthReview,exact:true},\" \",React.createElement(MonthReview,{monthObj:this.state.monthlistDB})),React.createElement(Route,{path:\"/actualMonth\",component:ActualMonth,exact:true},React.createElement(ActualMonth,{month:this.state.month,budget:this.state.actualBudget,getActualBudget:this.getActualBudget,getActualMonth:this.getActualMonth})),React.createElement(Route,{path:\"/newInput\",component:NewInput},React.createElement(NewInput,{month:this.state.month,budget:this.state.actualBudget,getActualBudget:this.getActualBudget})),React.createElement(Route,{path:\"/\",render:function render(){return React.createElement(Redirect,{to:\"/start\"});},exact:true})),React.createElement(IonTabBar,{slot:\"bottom\"},React.createElement(IonTabButton,{tab:\"newInput\",href:\"/newInput\",onClick:this.getActualBudget},React.createElement(IonIcon,{icon:addCircle}),React.createElement(IonLabel,null,\"New Input\")),React.createElement(IonTabButton,{tab:\"actualMonth\",href:\"/actualMonth\",onClick:this.getActualBudget},React.createElement(IonIcon,{icon:calendar}),React.createElement(IonLabel,null,\" Actual Month \")),React.createElement(IonTabButton,{tab:\"newMonth\",href:\"/newMonth\"},React.createElement(IonIcon,{icon:addCircleOutline}),React.createElement(IonLabel,null,\"New Month\")),React.createElement(IonTabButton,{tab:\"monthReview\",href:\"/monthReview\"},React.createElement(IonIcon,{icon:calendar}),React.createElement(IonLabel,null,\"Month Review\"))))));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/App.tsx"],"names":["React","Redirect","Route","IonApp","IonIcon","IonLabel","IonRouterOutlet","IonTabBar","IonTabButton","IonTabs","IonReactRouter","addCircleOutline","calendar","addCircle","NewMonth","MonthReview","NewInput","ActualMonth","Start","StartError","DBConfig","initDB","useIndexedDB","App","state","actualBudget","startbudget","month","monthObj","monthlistDB","allMonthObj","actualMonthObj","actualbudget","id","inputs","monthID","firstLoad","normalMode","starterror","getMonth","event","detail","value","monthsubstr","substr","setState","console","log","verifiyMonth","getStartbudget","parseInt","pushMonthObj","push","forceUpdate","add","getAll","then","getActualMonth","getMonthObj","firstLoadApp","length","startRechner","getByID","Math","max","apply","map","o","actualMonth","getActualBudget","update","index","added","ausgabe","betrag","inputs_id","titel","datum","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n  IonApp,\n  IonIcon,\n  IonLabel,\n  IonRouterOutlet,\n  IonTabBar,\n  IonTabButton,\n  IonTabs\n} from '@ionic/react';\nimport { IonReactRouter } from '@ionic/react-router';\nimport { addCircleOutline, calendar, addCircle } from 'ionicons/icons';\nimport NewMonth from './pages/NewMonth';\nimport MonthReview from './pages/MonthReview';\nimport NewInput from './pages/NewInput';\nimport ActualMonth from './pages/ActualMonth';\nimport Start from './pages/Start';\nimport StartError from './errors/starterror';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nimport { DatetimeChangeEventDetail, InputChangeEventDetail } from '@ionic/core';\nimport { DBConfig } from './db/DBConfig';\n\n\nimport { initDB, useIndexedDB } from 'react-indexed-db';\n\n\ninitDB(DBConfig);\n\n\n\ninterface IState {\n  month: string;\n  startbudget: number;\n  monthObj: object[];\n  monthlist?: object[];\n  monthlistDB: object[];\n  actualMonth?: string;\n  actualBudget: number;\n  allMonthObj: object[];\n  actualMonthObj: actualMonthObj;\n  inputs: object[];\n  monthID: number;\n  firstLoad: boolean;\n  normalMode: boolean;\n  starterror: boolean;\n}\ninterface IProps {\n\n}\n\ninterface actualMonthObj {\n  month: string;\n  startbudget: number;\n  actualbudget: number;\n  id: number;\n}\n\n/**\n * \n * Documentation Projekt Softwareengineering\n * Es wurde ein Ausgabenrechner implementiert, \n * der eine Übersicht über das aktuelle Budget und alle Ausgaben/Einnahmen eines Monats gibt\n * @author: Benedikt Keil\n * @version: V2.1\n * \n */\nclass App extends React.Component<IProps, IState>{\n  state: IState = {\n    actualBudget: 0,\n    startbudget: 0,\n    month: \"test\",\n    monthObj: [{ \"month\": \"Test\", \"startbudget\": 0 }],\n    monthlistDB: [],\n    allMonthObj: [{ \"month\": \"no Month\", \"startbudget\": 0, \"id\": 1 }],\n    actualMonthObj: { month: \"no Month\", startbudget: 0, actualbudget: 0, id: 0 },\n    inputs: [],\n    monthID: 1,\n    firstLoad: true,\n    normalMode: false,\n    starterror: false\n  }\n\n\n  /**\n * Methode um ausgewählten Monat zu speichern\n */\n  public getMonth = (event: CustomEvent<DatetimeChangeEventDetail>) => {\n    let month = event.detail.value;\n    let monthsubstr = month!.substr(0, 7);\n\n\n    this.setState({\n      month: monthsubstr!,\n\n    });\n\n    console.log(this.state.month);\n    this.verifiyMonth();\n  }\n  /**\n  * Methode um eingegebenes Startbudget zu speichern\n  */\n  public getStartbudget = (event: CustomEvent<InputChangeEventDetail>) => {\n    this.setState({\n      startbudget: parseInt(event.detail.value!),\n\n    })\n    console.log(this.state.startbudget);\n\n\n  }\n  /**\n   * Methode um Eingaben über Monat und Startbudget in Indexed DB zu speichern \n   * und um alle gespeicherten Monate in Indexed DB als State (monthlistDB) zu speichern.\n   * Aufruf der Methode getActualMonth um aktuellen Monat in App zu setzen.\n   */\n  public pushMonthObj = () => {\n\n    this.state.monthObj.push({ \"month\": this.state.month, \"startbudget\": this.state.startbudget })\n    this.forceUpdate();\n    const { add, getAll } = useIndexedDB('monthlist');\n\n\n    add({ month: this.state.month, startbudget: this.state.startbudget, actualbudget: this.state.startbudget })\n\n\n\n    getAll().then((monthlistDB) => {\n      this.setState({\n        monthlistDB: monthlistDB\n      })\n    })\n    this.getActualMonth();\n  }\n\n  /**\n   * Methode um alle gespeicherten Monate in Indexed DB abzurufen\n   * und im State monthlistDB zu speichern\n   */\n  public getMonthObj = () => {\n    const { getAll } = useIndexedDB('monthlist');\n    getAll().then((monthlistDB) => {\n      this.setState({\n        monthlistDB: monthlistDB\n      })\n    })\n  }\n\n  /**\n   * Methode um Startseite beim aller ersten Start der App zu starten.\n   * Die Seite wird benötigt um einen ersten Datenbank Eintrag zu generieren.\n   */\n  public firstLoadApp = () => {\n    const { getAll } = useIndexedDB('monthlist');\n    getAll().then((month) => {\n\n      if (month.length === 0) {\n        this.setState({\n          firstLoad: true,\n        })\n      }\n      else {\n        this.setState({\n          firstLoad: false,\n          normalMode: true,\n        })\n        this.getActualMonth();\n      }\n    })\n    console.log(this.state.month+this.state.startbudget);\n  }\n\n\n  /**\n   * Methode erstellt nach betätigen des \"Start Ausgabenrechner\" Buttons den ersten Datenbankeintrag in dem objectStore \"monthlist\"\n   */\n  public startRechner = () => {\n   \n    const { add, getAll } = useIndexedDB('monthlist');\n    if (this.state.month !== \"test\" && this.state.startbudget !== 0){\n    add({ month: this.state.month, startbudget: this.state.startbudget, actualbudget: this.state.startbudget });\n    getAll().then((month) => {\n      \n      if (month.length === 0) {\n        add({ month: this.state.month, startbudget: this.state.startbudget, actualbudget: this.state.startbudget });\n      }\n      getAll().then((month) => {\n\n\n        this.setState({\n          allMonthObj: month,\n          firstLoad: false,\n          normalMode: true,\n        })\n\n        this.getActualMonth();\n      })\n    })\n    }\n    else {\n    this.setState({\n        starterror: true,\n    })\n    }\n  }\n\n\n  /**\n   * Methode um aktuellen Monat (letzter hinzugefügter Monat) abzurufen\n   * und speichern der Werte dieses Monats als State (month, startbudget, actualbudget).\n   * Aufruf der Methode getActualBudget um aktuelles Budget abzurufen, wenn sich der Monat ändert.\n   */\n  public getActualMonth = () => {\n\n    const { getAll, getByID } = useIndexedDB('monthlist');\n    getAll().then((month) => {\n\n\n      this.setState({\n        allMonthObj: month\n      })\n    }).then(() => {\n      getByID(Math.max.apply(Math, this.state.allMonthObj.map((o: any) => { this.setState({ monthID: o.id }); return o.id }))).then((actualMonth) => {\n        console.log(actualMonth);\n\n        this.setState({\n          actualMonthObj: actualMonth,\n        })\n        this.setState({\n          month: this.state.actualMonthObj.month,\n          startbudget: this.state.actualMonthObj.startbudget,\n          actualBudget: this.state.actualMonthObj.actualbudget,\n        })\n        this.forceUpdate();\n        console.log(this.state.actualBudget)\n        this.getActualBudget();\n\n\n      })\n    })\n\n  }\n\n\n\n  /**\n   * Methode um aktuelles Budget aller Inputs des aktuellen Monats zu berechnen.\n   * Speichert den Wert in State (aktualBudget) \n   */\n  public getActualBudget = () => {\n   \n    const { getAll, update } = useIndexedDB('inputs');\n\n    getAll().then((inputs) => {\n\n      this.setState({\n        inputs: inputs\n      })\n    }).then(() => {\n\n      if (this.state.inputs.length !== 0) {\n        \n        this.state.inputs.map((index: any) => {\n          if (index.month === this.state.month && index.added === true){\n            let actualBudget = index.actualbudget;\n            this.setState({\n              actualBudget: actualBudget,\n            })\n          }\n          if (index.month === this.state.month && index.added === false) {\n\n            let actualBudget = index.actualbudget;\n            this.setState({\n              actualBudget: actualBudget,\n            })\n            if (index.ausgabe) {\n\n              actualBudget += index.betrag;\n              this.setState({\n                actualBudget: actualBudget,\n              })\n              update({ inputs_id: index.inputs_id, betrag: index.betrag, ausgabe: index.ausgabe, titel: index.titel, datum: index.datum, month: index.month, added: true, actualbudget: actualBudget });\n              \n            }\n            else {\n              actualBudget -= index.betrag;\n              this.setState({\n                actualBudget: actualBudget,\n              });\n              update({ inputs_id: index.inputs_id, betrag: index.betrag, ausgabe: index.ausgabe, titel: index.titel, datum: index.datum, month: index.month, added: true, actualbudget: actualBudget });\n              \n            }\n          }\n\n          return {\n           }\n         })\n       }\n    })\n  }\n\n\n  public verifiyMonth = ()=>{\n    const { getAll } = useIndexedDB('monthlist');\n    getAll().then((month)=> {\n      month.map((index: any)=>{\n        console.log(\"Test Month Verify: \" + this.state.month)\n        if(index.month === this.state.month){\n          this.setState({\n            starterror: true,\n            month: \"test\",\n            normalMode: false,\n          })\n          console.log(this.state.starterror);\n        }\n      })\n    })\n\n  }\n\n  /**\n   * Diese Methode rendert die TabBar die immer am unteren Bildschirmende gezeigt wird. \n   * Außerdem wird ein Router erstellt der die Navigation zwischen den einzelnen Seiten bereit stellt.\n   * Hier werden auch die Methoden der App Klasse an die anderen Komponenten übergeben, \n   * die dann in den einzelne Komponenten als Props zur Verfügung stehen.\n   */\n  public render() {\n\n    return (\n      <IonApp onLoad={() => { this.firstLoadApp(); this.getMonthObj();}}>\n\n        {this.state.firstLoad && (<Start startRechner={this.startRechner} getMonth={this.getMonth} getStartbudget={this.getStartbudget} month={this.state.month} startbudget={this.state.startbudget}></Start>)}\n        {this.state.starterror && (<StartError></StartError>)}\n        <IonReactRouter>\n\n          {this.state.normalMode && (<IonTabs>\n            <IonRouterOutlet>\n              <Route path=\"/newMonth\" >\n                <NewMonth getMonth={this.getMonth} getStartbudget={this.getStartbudget} pushMonthObj={this.pushMonthObj} month={this.state.month} startbudget={this.state.startbudget}></NewMonth>\n              </Route>\n              <Route path=\"/monthReview\" component={MonthReview} exact={true}> <MonthReview monthObj={this.state.monthlistDB}></MonthReview></Route>\n              <Route path=\"/actualMonth\" component={ActualMonth} exact={true}>\n                <ActualMonth month={this.state.month} budget={this.state.actualBudget} getActualBudget={this.getActualBudget} getActualMonth={this.getActualMonth}></ActualMonth>\n              </Route>\n              <Route path=\"/newInput\" component={NewInput}>\n                <NewInput month={this.state.month} budget={this.state.actualBudget} getActualBudget={this.getActualBudget} ></NewInput>\n              </Route>\n              <Route path=\"/\" render={() => <Redirect to=\"/start\" />} exact={true} />\n            </IonRouterOutlet>\n\n            <IonTabBar slot=\"bottom\">\n              <IonTabButton tab=\"newInput\" href=\"/newInput\" onClick={this.getActualBudget}>\n                <IonIcon icon={addCircle} />\n                <IonLabel>New Input</IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"actualMonth\" href=\"/actualMonth\" onClick={this.getActualBudget}>\n                <IonIcon icon={calendar} />\n                <IonLabel> Actual Month </IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"newMonth\" href=\"/newMonth\">\n                <IonIcon icon={addCircleOutline} />\n                <IonLabel>New Month</IonLabel>\n              </IonTabButton>\n              <IonTabButton tab=\"monthReview\" href=\"/monthReview\">\n                <IonIcon icon={calendar} />\n                <IonLabel>Month Review</IonLabel>\n              </IonTabButton>\n\n\n            </IonTabBar>\n          </IonTabs>)}\n\n        </IonReactRouter>\n      </IonApp>\n    )\n  };\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}