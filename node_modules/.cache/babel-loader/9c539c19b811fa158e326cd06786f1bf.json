{"ast":null,"code":"var _jsxFileName = \"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/NewInput.tsx\";\nimport React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonItem, IonInput, IonIcon, IonLabel, IonSelect, IonSelectOption, IonDatetime, IonButton, IonCard, IonCardContent } from '@ionic/react';\nimport { cash, add, remove, text, calendar } from 'ionicons/icons';\nimport { useIndexedDB } from 'react-indexed-db';\n\n/**\n * Klasse bzw Komponente um neue Input Einträge für den aktuellen Monat zu erstellen\n */\nclass NewInput extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      issue: false,\n      revenue: false,\n      title: \"\",\n      value: 0,\n      date: \"\",\n      isSet: false\n    };\n\n    this.getType = event => {\n      if (event.detail.value === \"Issue (-)\") {\n        this.setState({\n          issue: true,\n          revenue: false,\n          isSet: true\n        });\n      } else if (event.detail.value === \"Revenue (+)\") {\n        this.setState({\n          issue: false,\n          revenue: true,\n          isSet: true\n        });\n      }\n    };\n\n    this.getTitle = event => {\n      this.setState({\n        title: event.detail.value\n      });\n    };\n\n    this.getValue = event => {\n      this.setState({\n        value: parseInt(event.detail.value)\n      });\n    };\n\n    this.getDate = event => {\n      let date = event.detail.value;\n      this.setState({\n        date: date\n      });\n    };\n  }\n\n  /**\n   * Methode um alle Eingaben des Eintrags in der Indexed DB zu speichern. \n   * Diese Methode wird bei Betätigung des Buttons \"Add Input\" ausgeführt.\n   */\n  saveInput() {\n    const _useIndexedDB = useIndexedDB('inputs'),\n          add = _useIndexedDB.add;\n\n    add({\n      ausgabe: this.state.revenue,\n      titel: this.state.title,\n      betrag: this.state.value,\n      datum: this.state.date,\n      month: this.props.month,\n      added: false,\n      actualbudget: this.props.budget\n    });\n  }\n  /**\n   * Methode um den Inhalt der Seite \"New Input\" zu rendern. \n   * Stellt die Select/Input Tags dar und gibt den Button bei vollständigen Eintrag \n   * der einzelnen Felder zum Betätigen frei.\n   */\n\n\n  render() {\n    this.force;\n    return React.createElement(IonPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(IonHeader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(IonToolbar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(IonTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"New Input\"))), React.createElement(IonContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(IonCard, {\n      className: \"welcome-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"/assets/money.jpg\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(IonCardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"F\\xFCgen Sie einen neuen Input hinzu.\"), \"Eine \\xDCbersicht \\xFCber alle Inputs des aktuellen Monats, sowie das aktuelle Budget finden Sie bei \\\"Actual Month\\\".\")), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Actual Month: \", this.props.month)), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(IonLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Actual Budget: \", this.props.budget)), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      slot: \"start\",\n      color: \"medium\",\n      icon: add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(IonIcon, {\n      slot: \"start\",\n      color: \"medium\",\n      icon: remove,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(IonSelect, {\n      title: \"Input/Output\",\n      onIonChange: this.getType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(IonSelectOption, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Revenue (+)\"), React.createElement(IonSelectOption, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Issue (-)\"))), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      slot: \"start\",\n      color: \"medium\",\n      icon: text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(IonInput, {\n      type: \"text\",\n      placeholder: \"Title\",\n      onIonChange: this.getTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      slot: \"start\",\n      color: \"medium\",\n      icon: cash,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(IonInput, {\n      type: \"number\",\n      placeholder: \"Select Value\",\n      inputMode: \"numeric\",\n      onIonChange: this.getValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(IonItem, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(IonIcon, {\n      slot: \"start\",\n      color: \"medium\",\n      icon: calendar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }), React.createElement(IonDatetime, {\n      displayFormat: \"DD MMMM YY\",\n      pickerFormat: \"DD MMMM YY\",\n      mode: \"md\",\n      min: this.props.month,\n      max: this.props.month,\n      placeholder: \"Select Date\",\n      onIonChange: this.getDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    })), React.createElement(IonButton, {\n      color: \"secondary\",\n      expand: \"block\",\n      routerLink: \"/actualMonth\",\n      disabled: this.state.isSet == false || this.state.title == \"\" || this.state.value == 0 || this.state.date == \"\",\n      onClick: () => {\n        this.saveInput();\n        this.props.getActualBudget();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Add Input\")));\n  }\n\n}\n\n;\nexport default NewInput;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/NewInput.tsx"],"names":["React","IonHeader","IonToolbar","IonPage","IonTitle","IonContent","IonItem","IonInput","IonIcon","IonLabel","IonSelect","IonSelectOption","IonDatetime","IonButton","IonCard","IonCardContent","cash","add","remove","text","calendar","useIndexedDB","NewInput","Component","state","issue","revenue","title","value","date","isSet","getType","event","detail","setState","getTitle","getValue","parseInt","getDate","saveInput","ausgabe","titel","betrag","datum","month","props","added","actualbudget","budget","render","force","getActualBudget"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IonHeader, IonToolbar, IonPage, IonTitle, IonContent, IonItem, IonInput, IonIcon, IonLabel, IonSelect, IonSelectOption, IonDatetime, IonButton, IonCard, IonCardContent } from '@ionic/react';\nimport { cash, add, remove, text, calendar } from 'ionicons/icons';\nimport { DatetimeChangeEventDetail, InputChangeEventDetail } from '@ionic/core';\nimport { useIndexedDB } from 'react-indexed-db';\n\n\ninterface IState{\nissue?: boolean;\nrevenue?: boolean;\ntitle?: string;\nvalue?: number;\ndate?: string;\nisSet?: boolean;\n\n}\n\ninterface IProps {\n  month:string;\n  budget: number;\n  getActualBudget: ()=> void; \n\n}\n\n/**\n * Klasse bzw Komponente um neue Input Einträge für den aktuellen Monat zu erstellen\n */\nclass NewInput extends React.Component<IProps, IState> {\n  state: IState ={\n    issue: false,\n    revenue: false,\n    title: \"\",\n    value: 0,\n    date: \"\",\n    isSet: false\n\n  }\n\n  \n    /**\n     * Methode um den Typ des Input Eintrags zu erhalten. \n     * Ein Input kann entweder Einnahme oder Ausgabe sein.\n     *   \n     */\n    public getType = (event: CustomEvent<InputChangeEventDetail>) => {\n    \n      if (event.detail.value===\"Issue (-)\"){\n        this.setState({\n          issue: true ,\n          revenue: false,\n          isSet: true,\n        })\n      }\n      else if (event.detail.value===\"Revenue (+)\"){\n        this.setState({\n          issue: false ,\n          revenue: true,\n          isSet: true\n        })\n      }\n    }\n    \n    /**\n     * Methode um den Title eines Eintrags zu erhalten und diesen in den State title zu speichern\n     */\n    public getTitle = (event: CustomEvent<InputChangeEventDetail>) => {\n      this.setState({\n        title: event.detail.value! ,\n      })\n    }\n\n    /**\n     * Methode um den Geldwert eines Eintrags zu erhalten und diesen in den State value zu speichern\n     */\n    public getValue = (event: CustomEvent<InputChangeEventDetail>) => {\n     this.setState({\n        value: parseInt(event.detail.value!) ,\n      })  \n    }\n\n    /**\n     * Methode um das Datum eines Eintrags zu erhalten und diesen in den state date zu speichern.\n     */\n    public getDate = (event: CustomEvent<DatetimeChangeEventDetail>) => {\n      let date = event.detail.value;\n      \n      \n      this.setState({\n        date: date!,\n    \n      });     \n    }\n\n    /**\n     * Methode um alle Eingaben des Eintrags in der Indexed DB zu speichern. \n     * Diese Methode wird bei Betätigung des Buttons \"Add Input\" ausgeführt.\n     */\n    public saveInput(){\n      const {add} = useIndexedDB('inputs');\n      add({ausgabe: this.state.revenue, titel: this.state.title, betrag: this.state.value, datum: this.state.date, month: this.props.month, added: false, actualbudget: this.props.budget});\n      \n    }\n  \n\n    /**\n     * Methode um den Inhalt der Seite \"New Input\" zu rendern. \n     * Stellt die Select/Input Tags dar und gibt den Button bei vollständigen Eintrag \n     * der einzelnen Felder zum Betätigen frei.\n     */\n    public render(){\n      this.force\n    return (\n    <IonPage>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>New Input</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n      <IonCard className=\"welcome-card\">\n          <img src=\"/assets/money.jpg\" alt=\"\" />\n         \n          <IonCardContent>\n            <p>\n              Fügen Sie einen neuen Input hinzu.</p>\n              Eine Übersicht über alle Inputs des aktuellen Monats, sowie das aktuelle Budget finden Sie bei \"Actual Month\".\n            \n          </IonCardContent>\n        </IonCard>\n        <IonItem>\n      <IonLabel>\n      Actual Month: {this.props.month}\n      </IonLabel>\n      </IonItem>\n      <IonItem>\n      <IonLabel>\n      Actual Budget: {this.props.budget}\n      </IonLabel>\n      </IonItem>\n      <IonItem>\n            <IonIcon slot=\"start\" color=\"medium\" icon={add} />\n            <IonIcon slot=\"start\" color=\"medium\" icon={remove} />\n            <IonSelect title=\"Input/Output\" onIonChange={this.getType}>\n              <IonSelectOption>Revenue (+)</IonSelectOption>\n              <IonSelectOption>Issue (-)</IonSelectOption>\n            </IonSelect>\n            </IonItem>\n\n            <IonItem>\n            <IonIcon slot=\"start\" color=\"medium\" icon={text} />\n            <IonInput type=\"text\" placeholder=\"Title\" onIonChange={this.getTitle} ></IonInput>\n            </IonItem>\n\n      <IonItem>\n            <IonIcon slot=\"start\" color=\"medium\" icon={cash} />\n            <IonInput type=\"number\" placeholder=\"Select Value\"  inputMode=\"numeric\" onIonChange={this.getValue} ></IonInput>\n            </IonItem>\n\n            <IonItem >\n            <IonIcon slot=\"start\" color=\"medium\" icon={calendar} />\n            <IonDatetime displayFormat=\"DD MMMM YY\" pickerFormat=\"DD MMMM YY\" mode=\"md\"  min={this.props.month} max={this.props.month} placeholder=\"Select Date\" onIonChange={this.getDate} ></IonDatetime>\n          </IonItem>\n          <IonButton color=\"secondary\" expand=\"block\" routerLink=\"/actualMonth\" disabled={this.state.isSet == false !|| this.state.title == \"\" !|| this.state.value == 0 !|| this.state.date == \"\"} onClick={()=>{this.saveInput(); this.props.getActualBudget(); }}>Add Input</IonButton>\n\n       </IonContent> \n    </IonPage>\n    );\n   }\n};\n\nexport default NewInput;\n"]},"metadata":{},"sourceType":"module"}