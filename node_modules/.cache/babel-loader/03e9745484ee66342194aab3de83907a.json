{"ast":null,"code":"import _classCallCheck from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{IonContent,IonHeader,IonItem,IonLabel,IonList,IonPage,IonTitle,IonToolbar,IonRow,IonCol,IonGrid}from'@ionic/react';import{useIndexedDB}from'react-indexed-db';/**\n   * Klasse oder Komponente die den Aktuellen Monat mit allen zugehörigen Inputs anzeigt\n   */var ActualMonth=/*#__PURE__*/function(_React$Component){_inherits(ActualMonth,_React$Component);function ActualMonth(){var _getPrototypeOf2;var _this;_classCallCheck(this,ActualMonth);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(ActualMonth)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={inputs:[]};_this.getInputsByIndex=function(){var _useIndexedDB=useIndexedDB('inputs'),getAll=_useIndexedDB.getAll;getAll().then(function(inputs){_this.setState({inputs:inputs});});};return _this;}_createClass(ActualMonth,[{key:\"render\",/**\n   * Diese Methode rendert die Seite Actual Month. \n   * Hier wird der aktuelle Monat mit dem aktuellen Budget angezeigt. \n   * Mit Hilfe einer Map Funktion werden alle Inputs, die dem aktuellen Monat zugehören, aufgelistet. \n   * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen.\n   */value:function render(){var _this2=this;this.getInputsByIndex();return React.createElement(IonPage,{onLoad:function onLoad(){_this2.props.getActualMonth();_this2.props.getActualBudget();_this2.forceUpdate();}},React.createElement(IonHeader,null,React.createElement(IonToolbar,null,React.createElement(IonTitle,null,\"Actual Month\"))),React.createElement(IonContent,null,React.createElement(IonList,null,React.createElement(IonItem,null,React.createElement(IonLabel,null,\"Actual Month: \",this.props.month.substr(0,7))),React.createElement(IonItem,null,React.createElement(IonLabel,null,\"Actual Budget: \",this.props.budget)),React.createElement(\"br\",null),React.createElement(IonList,null,React.createElement(IonItem,null,React.createElement(IonGrid,null,React.createElement(IonRow,null,React.createElement(IonCol,null,\"Date\"),React.createElement(IonCol,null,\"Title\"),React.createElement(IonCol,null,\"Value\")))),/**\n               * Methode um alle Inputs aufzulisten die dem Aktuellen Monat zugehören.\n               * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen\n               */this.state.inputs.map(function(index){if(index.month===_this2.props.month.substr(0,7)){var out=\"\";if(index.ausgabe){out=\"+ \";}else{out=\"- \";}return React.createElement(IonItem,{key:index.inputs_id},React.createElement(IonGrid,null,React.createElement(IonRow,null,React.createElement(IonCol,null,index.datum.substr(0,10)),React.createElement(IonCol,null,index.titel),React.createElement(IonCol,null,out,index.betrag,\"\\u20AC\"))));}})))));}}]);return ActualMonth;}(React.Component);export default ActualMonth;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/ActualMonth.tsx"],"names":["React","IonContent","IonHeader","IonItem","IonLabel","IonList","IonPage","IonTitle","IonToolbar","IonRow","IonCol","IonGrid","useIndexedDB","ActualMonth","state","inputs","getInputsByIndex","getAll","then","setState","props","getActualMonth","getActualBudget","forceUpdate","month","substr","budget","map","index","out","ausgabe","inputs_id","datum","titel","betrag","Component"],"mappings":"i6BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,SAArB,CAAgCC,OAAhC,CAAyCC,QAAzC,CAAmDC,OAAnD,CAA4DC,OAA5D,CAAqEC,QAArE,CAA+EC,UAA/E,CAA2FC,MAA3F,CAAmGC,MAAnG,CAA2GC,OAA3G,KAAyH,cAAzH,CAGA,OAAQC,YAAR,KAA2B,kBAA3B,CAmBE;;QAGIC,CAAAA,W,+ZACJC,K,CAAe,CACbC,MAAM,CAAE,EADK,C,OAQRC,gB,CAAkB,UAAK,mBACTJ,YAAY,CAAC,QAAD,CADH,CACnBK,MADmB,eACnBA,MADmB,CAG1BA,MAAM,GAAGC,IAAT,CAAc,SAACH,MAAD,CAAW,CAEvB,MAAKI,QAAL,CAAc,CACbJ,MAAM,CAAEA,MADK,CAAd,EAGD,CALD,EAMH,C,uDAED;;;;;4BAMe,iBAEb,KAAKC,gBAAL,GAEF,MACE,qBAAC,OAAD,EAAS,MAAM,CAAE,iBAAI,CAAC,MAAI,CAACI,KAAL,CAAWC,cAAX,GAA6B,MAAI,CAACD,KAAL,CAAWE,eAAX,GAA6B,MAAI,CAACC,WAAL,GAAoB,CAApG,EACE,oBAAC,SAAD,MACE,oBAAC,UAAD,MACE,oBAAC,QAAD,qBADF,CADF,CADF,CAME,oBAAC,UAAD,MACE,oBAAC,OAAD,MACE,oBAAC,OAAD,MAGE,oBAAC,QAAD,uBACS,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwB,CAAxB,CAA0B,CAA1B,CADT,CAHF,CADF,CASF,oBAAC,OAAD,MAEA,oBAAC,QAAD,wBACgB,KAAKL,KAAL,CAAWM,MAD3B,CAFA,CATE,CAgBE,8BAhBF,CAiBE,oBAAC,OAAD,MACE,oBAAC,OAAD,MACE,oBAAC,OAAD,MACE,oBAAC,MAAD,MACE,oBAAC,MAAD,aADF,CAIE,oBAAC,MAAD,cAJF,CAOE,oBAAC,MAAD,cAPF,CADF,CADF,CADF,CAiBI;;;iBAIF,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,SAACC,KAAD,CAAc,CAElC,GAAGA,KAAK,CAACJ,KAAN,GAAc,MAAI,CAACJ,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwB,CAAxB,CAA0B,CAA1B,CAAjB,CAA8C,CAE9C,GAAII,CAAAA,GAAG,CAAG,EAAV,CACE,GAAID,KAAK,CAACE,OAAV,CAAkB,CAChBD,GAAG,CAAE,IAAL,CACC,CAFH,IAGM,CACFA,GAAG,CAAE,IAAL,CAED,CAEL,MACE,qBAAC,OAAD,EAAS,GAAG,CAAED,KAAK,CAACG,SAApB,EACE,oBAAC,OAAD,MACF,oBAAC,MAAD,MACA,oBAAC,MAAD,MAASH,KAAK,CAACI,KAAN,CAAYP,MAAZ,CAAmB,CAAnB,CAAqB,EAArB,CAAT,CADA,CAEJ,oBAAC,MAAD,MAASG,KAAK,CAACK,KAAf,CAFI,CAGF,oBAAC,MAAD,MACEJ,GADF,CAEGD,KAAK,CAACM,MAFT,UAHE,CADE,CADF,CADF,CAaE,CACH,CA3BD,CArBF,CAjBF,CADF,CANF,CADF,CAmFD,C,yBAjHyBlC,KAAK,CAACmC,S,EAoHhC,cAAetB,CAAAA,WAAf","sourcesContent":["import React from 'react';\nimport { IonContent, IonHeader, IonItem, IonLabel, IonList, IonPage, IonTitle, IonToolbar, IonRow, IonCol, IonGrid} from '@ionic/react';\n\n\nimport {useIndexedDB} from 'react-indexed-db';\n\n\n\n  \n\n\n  interface IState {\n    inputs: object[];\n  }\n  \n  interface IProps {\n  month: string;\n  budget: number;\n  getActualBudget: ()=> void; \n  getActualMonth: ()=> void; \n  }\n\n\n  /**\n   * Klasse oder Komponente die den Aktuellen Monat mit allen zugehörigen Inputs anzeigt\n   */\nclass ActualMonth extends React.Component<IProps, IState> {\n  state: IState ={\n    inputs: []\n  }\n \n\n  /**\n   * Methode um alle Inputs aus der Indexed DB abzurufen\n   */\n  public getInputsByIndex= ()=> {\n      const {getAll} = useIndexedDB('inputs');\n\n      getAll().then((inputs) =>{\n  \n        this.setState({\n         inputs: inputs\n       })\n      })\n  } \n \n  /**\n   * Diese Methode rendert die Seite Actual Month. \n   * Hier wird der aktuelle Monat mit dem aktuellen Budget angezeigt. \n   * Mit Hilfe einer Map Funktion werden alle Inputs, die dem aktuellen Monat zugehören, aufgelistet. \n   * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen.\n   */ \n  public render(){\n \n    this.getInputsByIndex();\n   \n  return (\n    <IonPage onLoad={()=>{this.props.getActualMonth() ;this.props.getActualBudget();this.forceUpdate();}}>\n      <IonHeader>\n        <IonToolbar>\n          <IonTitle>Actual Month</IonTitle>\n        </IonToolbar>\n      </IonHeader>\n      <IonContent>\n        <IonList>\n          <IonItem >\n            \n\n            <IonLabel>\n      Actual Month: {this.props.month.substr(0,7)}\n      </IonLabel>\n      </IonItem>\n     \n      <IonItem>\n\n      <IonLabel>\n      Actual Budget: {this.props.budget}\n      </IonLabel>\n          </IonItem>\n\n          <br></br>\n          <IonList>\n            <IonItem>\n              <IonGrid>\n                <IonRow>\n                  <IonCol>\n                    Date\n                  </IonCol>\n                  <IonCol>\n                    Title\n                  </IonCol>\n                  <IonCol>\n                    Value\n                  </IonCol>\n                </IonRow>\n              </IonGrid>\n              </IonItem>\n            {\n              /**\n               * Methode um alle Inputs aufzulisten die dem Aktuellen Monat zugehören.\n               * Es wird jeder Input nach Art (Einnahme und Ausgabe) überprüft und mit entsprechenden Symbol (+ oder -) versehen\n               */\n            this.state.inputs.map((index: any)=>{\n              \n              if(index.month===this.props.month.substr(0,7)){\n                \n              let out = \"\";\n                if (index.ausgabe){\n                  out= \"+ \"\n                  }\n                  else{\n                    out= \"- \"\n                    \n                  }\n\n              return (\n                <IonItem key={index.inputs_id}>\n                  <IonGrid>\n                <IonRow >\n                <IonCol>{index.datum.substr(0,10)}</IonCol>\n            <IonCol>{index.titel}</IonCol> \n              <IonCol>\n               {out}\n                {index.betrag}€</IonCol>\n              \n            </IonRow>\n            </IonGrid>\n            </IonItem>\n              )}\n            })\n          }\n          </IonList>\n         \n        </IonList>\n      \n  \n      </IonContent>\n    </IonPage>\n  );\n}\n\n}\nexport default ActualMonth;"]},"metadata":{},"sourceType":"module"}