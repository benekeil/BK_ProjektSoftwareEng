{"ast":null,"code":"import _classCallCheck from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{IonContent,IonHeader,IonItem,IonLabel,IonList,IonPage,IonTitle,IonToolbar,IonSelect,IonSelectOption,IonGrid,IonRow,IonCol}from'@ionic/react';import{useIndexedDB}from'react-indexed-db';/**\n * Klasse oder Komponente die alle bisher hinzugefügten Monate in einer Auswahl auflistet \n * und nach Auswahl eines Monats dessen kompletten Eingaben aufzeigt\n */var MonthReview=/*#__PURE__*/function(_React$Component){_inherits(MonthReview,_React$Component);function MonthReview(){var _getPrototypeOf2;var _this;_classCallCheck(this,MonthReview);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MonthReview)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={inputs:[],reviewedMonth:\"\",monthlist:[],endBudget:0,summeInputs:0,startbudget:0};_this.getMonthReview=function(event){_this.setState({reviewedMonth:event.detail.value});_this.getMonthValues();_this.getMonthInputs();};_this.getMonthInputs=function(){var _useIndexedDB=useIndexedDB('inputs'),getAll=_useIndexedDB.getAll,update=_useIndexedDB.update;getAll().then(function(inputs){_this.state.monthlist.map(function(index){if(index.month===_this.state.reviewedMonth.substr(0,7)){_this.setState({startbudget:index.startbudget});}});_this.setState({inputs:inputs,summeInputs:0});}).then(function(){if(_this.state.inputs.length!==0){_this.state.inputs.map(function(index){if(index.month===_this.state.reviewedMonth.substr(0,7)){var summeInputs=_this.state.summeInputs;if(index.ausgabe){summeInputs-=index.betrag;_this.setState({summeInputs:summeInputs});}else{summeInputs+=index.betrag;_this.setState({summeInputs:summeInputs});}}});}}).then(function(){console.log(\"startbudget: \"+_this.state.startbudget);var endBudget=_this.state.startbudget-_this.state.summeInputs;_this.setState({endBudget:endBudget});});};_this.getMonthValues=function(){var _useIndexedDB2=useIndexedDB('monthlist'),getAll=_useIndexedDB2.getAll;getAll().then(function(monthlist){_this.setState({monthlist:monthlist});});};return _this;}_createClass(MonthReview,[{key:\"render\",/**\n   * Methode rendert die Seite Month Review. \n   * Nachdem ein Monat über das Select Tag ausgewählt wurde, \n   * wird eine Liste mit allen Inputs des ausgewählten Monats gerendert.\n   * Ebenfalls wird das Startbudget und das am Ende übrig gebliebene Endbudget angezeigt.\n   */value:function render(){var _this2=this;return React.createElement(IonPage,null,React.createElement(IonHeader,null,React.createElement(IonToolbar,null,React.createElement(IonTitle,null,\"Month List\"))),React.createElement(IonContent,null,React.createElement(IonList,null,React.createElement(IonItem,null,React.createElement(IonLabel,null),React.createElement(IonSelect,{slot:\"start\",multiple:false,placeholder:\"Select Month\",onIonChange:this.getMonthReview},this.props.monthObj.map(function(index){return React.createElement(IonSelectOption,{key:index.month},index.month,\" \");}))),React.createElement(IonList,null,this.state.monthlist.map(function(monthValues){if(monthValues.month===_this2.state.reviewedMonth.substr(0,7)){return React.createElement(IonItem,{key:monthValues.id},React.createElement(IonLabel,null,\"Startbudget: \",_this2.state.startbudget),React.createElement(IonLabel,null,\"Endbudget: \",_this2.state.endBudget));}})),React.createElement(IonList,null,this.state.inputs.map(function(index){if(index.month===_this2.state.reviewedMonth.substr(0,7)){var out=\"\";if(index.ausgabe){out=\"+ \";}else{out=\"- \";}return React.createElement(IonItem,{key:index.inputs_id},React.createElement(IonGrid,null,React.createElement(IonRow,null,React.createElement(IonCol,null,index.datum.substr(0,10)),React.createElement(IonCol,null,index.titel),React.createElement(IonCol,null,out,index.betrag,\"\\u20AC\"))));}})))));}}]);return MonthReview;}(React.Component);export default MonthReview;","map":{"version":3,"sources":["/Users/benediktkeil/Softwareeng/Test080120/BK_ProjektSoftwareEng/src/pages/MonthReview.tsx"],"names":["React","IonContent","IonHeader","IonItem","IonLabel","IonList","IonPage","IonTitle","IonToolbar","IonSelect","IonSelectOption","IonGrid","IonRow","IonCol","useIndexedDB","MonthReview","state","inputs","reviewedMonth","monthlist","endBudget","summeInputs","startbudget","getMonthReview","event","setState","detail","value","getMonthValues","getMonthInputs","getAll","update","then","map","index","month","substr","length","ausgabe","betrag","console","log","props","monthObj","monthValues","id","out","inputs_id","datum","titel","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { IonContent, IonHeader, IonItem, IonLabel, IonList, IonPage, IonTitle, IonToolbar, IonSelect, IonSelectOption, IonGrid, IonRow, IonCol } from '@ionic/react';\n\nimport { InputChangeEventDetail } from '@ionic/core';\nimport { useIndexedDB } from 'react-indexed-db';\n\n\n\n\n\ninterface IState {\n  reviewedMonth: string;\n  inputs: object[];\n  monthlist: object[];\n  endBudget: number;\n  summeInputs: number;\n  startbudget: number;\n}\n\ninterface IProps {\n  monthObj: object[];\n  actualBudget: number;\n}\n\n\n/**\n * Klasse oder Komponente die alle bisher hinzugefügten Monate in einer Auswahl auflistet \n * und nach Auswahl eines Monats dessen kompletten Eingaben aufzeigt\n */\nclass MonthReview extends React.Component<IProps, IState> {\n  state: IState = {\n    inputs: [],\n    reviewedMonth: \"\",\n    monthlist: [],\n    endBudget: 0,\n    summeInputs: 0,\n    startbudget: 0,\n  }\n\n  /**\n   * Methode um ausgewählten Monat der Monatsauswahl zu speichern und\n   * Aufruf der Methodem getMonthInputs und getMonthValues\n   */\n  public getMonthReview = (event: CustomEvent<InputChangeEventDetail>) => {\n    this.setState({\n      reviewedMonth: event.detail.value!,\n    })\n\n    this.getMonthValues();\n    this.getMonthInputs();\n\n  }\n\n  /**\n   * Methode um alle Inputs der Indexed DB abzurufen und in State inputs zu speichern.\n   * Auch wird hier der Endbetrag des ausgewählten Monats gesetzt \n   */\n  public getMonthInputs = () => {\n\n\n    const { getAll, update } = useIndexedDB('inputs');\n    getAll().then((inputs) => {\n\n\n      this.state.monthlist.map((index: any) => {\n        if (index.month === this.state.reviewedMonth.substr(0, 7)) {\n          this.setState({\n            startbudget: index.startbudget\n          })\n        }\n      })\n\n      this.setState({\n        inputs: inputs,\n        summeInputs: 0,\n      })\n    }).then(() => {\n      if (this.state.inputs.length !== 0) {\n        this.state.inputs.map((index: any) => {\n          if (index.month === this.state.reviewedMonth.substr(0, 7)) {\n            let summeInputs = this.state.summeInputs;\n\n            if (index.ausgabe) {\n              summeInputs -= index.betrag;\n\n              this.setState({\n                summeInputs: summeInputs,\n              })\n            } else {\n              summeInputs += index.betrag;\n\n              this.setState({\n                summeInputs: summeInputs,\n              })\n            }\n          }\n        })\n      }\n    }).then(() => {\n      console.log(\"startbudget: \" + this.state.startbudget)\n      let endBudget = this.state.startbudget - this.state.summeInputs;\n      this.setState({\n        endBudget: endBudget,\n      })\n    })\n  }\n\n  /**\n   * Methode um alle in der Indexed DB gespeicherten Werte des ObjectStores \"monthlist\" abzurufen \n   * und im State \"monthlist\" zu speichern\n   */\n  public getMonthValues = () => {\n    const { getAll } = useIndexedDB('monthlist');\n\n    getAll().then((monthlist) => {\n\n      this.setState({\n        monthlist: monthlist\n      })\n\n    })\n  }\n\n\n  /**\n   * Methode rendert die Seite Month Review. \n   * Nachdem ein Monat über das Select Tag ausgewählt wurde, \n   * wird eine Liste mit allen Inputs des ausgewählten Monats gerendert.\n   * Ebenfalls wird das Startbudget und das am Ende übrig gebliebene Endbudget angezeigt.\n   */\n  public render() {\n\n    return (\n      <IonPage>\n        <IonHeader>\n          <IonToolbar>\n            <IonTitle>Month List</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent>\n          <IonList>\n            <IonItem >\n              <IonLabel>\n\n              </IonLabel>\n              <IonSelect slot=\"start\" multiple={false} placeholder=\"Select Month\" onIonChange={this.getMonthReview}>\n                {\n                  this.props.monthObj.map((index: any) => {\n                    return (\n                      <IonSelectOption key={index.month}>{index.month} </IonSelectOption>\n                    )\n\n                  })\n                }\n\n              </IonSelect>\n            </IonItem>\n\n            <IonList>\n              {\n                this.state.monthlist.map((monthValues: any) => {\n                  if (monthValues.month === this.state.reviewedMonth.substr(0, 7)) {\n\n                    return (\n                      <IonItem key={monthValues.id}>\n                        <IonLabel>\n                          Startbudget: {this.state.startbudget}\n                        </IonLabel>\n                        <IonLabel>\n                          Endbudget: {this.state.endBudget}\n                        </IonLabel>\n                      </IonItem>\n\n\n                    )\n                  }\n                })}\n\n            </IonList>\n\n\n            <IonList>\n\n              {\n                this.state.inputs.map((index: any) => {\n\n                  if (index.month === this.state.reviewedMonth.substr(0, 7)) {\n\n                    let out = \"\";\n                    if (index.ausgabe) {\n                      out = \"+ \"\n                    }\n                    else {\n                      out = \"- \"\n\n                    }\n\n                    return (\n                      <IonItem key={index.inputs_id}>\n                        <IonGrid>\n                          <IonRow >\n                            <IonCol>{index.datum.substr(0, 10)}</IonCol>\n                            <IonCol>{index.titel}</IonCol>\n                            <IonCol>\n                              {out}\n                              {index.betrag}€</IonCol>\n\n                          </IonRow>\n                        </IonGrid>\n                      </IonItem>\n                    )\n                  }\n                })\n              }\n            </IonList>\n\n          </IonList>\n        </IonContent>\n      </IonPage>\n    );\n  }\n\n}\nexport default MonthReview;"]},"metadata":{},"sourceType":"module"}